export const stylisticJsRules = {
	'@stylistic/js/array-bracket-newline': 'off',
	'@stylistic/js/array-bracket-spacing': 'off',
	'@stylistic/js/array-element-newline': 'off',
	'@stylistic/js/arrow-spacing': 'off',
	'@stylistic/js/block-spacing': 'off',
	'@stylistic/js/brace-style': 'off',
	'@stylistic/js/comma-dangle': 'off',
	'@stylistic/js/comma-style': 'off',
	'@stylistic/js/computed-property-spacing': 'off',
	'@stylistic/js/dot-location': 'off',
	'@stylistic/js/function-call-argument-newline': 'off',
	'@stylistic/js/function-call-spacing': 'off',
	'@stylistic/js/function-paren-newline': 'off',
	'@stylistic/js/generator-star-spacing': 'off',
	'@stylistic/js/implicit-arrow-linebreak': 'off',
	'@stylistic/js/indent': 'off',
	'@stylistic/js/jsx-quotes': 'off',
	'@stylistic/js/key-spacing': 'off',
	'@stylistic/js/keyword-spacing': 'off',
	'@stylistic/js/line-comment-position': 'off',
	'@stylistic/js/linebreak-style': 'off',
	'@stylistic/js/max-statements-per-line': 'off',
	'@stylistic/js/multiline-comment-style': 'off',
	'@stylistic/js/multiline-ternary': 'off',
	'@stylistic/js/newline-per-chained-call': 'off',
	'@stylistic/js/no-confusing-arrow': 'off',
	'@stylistic/js/no-extra-parens': 'off',
	'@stylistic/js/no-extra-semi': 'off',
	'@stylistic/js/no-floating-decimal': 'off',
	'@stylistic/js/no-mixed-operators': 'off',
	'@stylistic/js/no-mixed-spaces-and-tabs': 'off',
	'@stylistic/js/no-multi-spaces': 'off',
	'@stylistic/js/semi': 'off',
	'@stylistic/js/semi-spacing': 'off',
	'@stylistic/js/semi-style': 'off',
	'@stylistic/js/space-in-parens': 'off',
	'@stylistic/js/space-unary-ops': 'off',
	'@stylistic/js/switch-colon-spacing': 'off',
	'@stylistic/js/template-curly-spacing': 'off',
	'@stylistic/js/template-tag-spacing': 'off',
	'@stylistic/js/wrap-iife': 'off',
	'@stylistic/js/wrap-regex': 'off',
	'@stylistic/js/yield-star-spacing': 'off',
	'@stylistic/js/no-tabs': 'off',
	'@stylistic/js/no-whitespace-before-property': 'off',
	'@stylistic/js/nonblock-statement-body-position': 'off',
	'@stylistic/js/object-curly-newline': 'off',
	'@stylistic/js/object-property-newline': 'off',
	'@stylistic/js/one-var-declaration-per-line': 'off',
	'@stylistic/js/operator-linebreak': 'off',
	'@stylistic/js/padded-blocks': 'off',
	'@stylistic/js/arrow-parens': ['error', 'always'],
	'@stylistic/js/comma-spacing': ['error', { before: false, after: true }],
	'@stylistic/js/eol-last': 'error',
	'@stylistic/js/func-call-spacing': 'error',
	'@stylistic/js/lines-around-comment': [
		'error',
		{
			afterBlockComment: false,
			afterLineComment: false,
			allowArrayEnd: true,
			allowArrayStart: true,
			allowBlockEnd: true,
			allowBlockStart: true,
			allowClassEnd: true,
			allowClassStart: true,
			allowObjectEnd: true,
			allowObjectStart: true,
			applyDefaultIgnorePatterns: true,
			beforeBlockComment: false,
			beforeLineComment: false,
		},
	],
	'@stylistic/js/spaced-comment': ['error', 'always', { exceptions: ['*'] }],
	'@stylistic/js/space-infix-ops': 'error',
	'@stylistic/js/space-before-function-paren': [
		'error',
		{
			named: 'never',
			anonymous: 'ignore',
			asyncArrow: 'always',
		},
	],
	'@stylistic/js/space-before-blocks': 'error',
	'@stylistic/js/rest-spread-spacing': 'error',
	'@stylistic/js/quotes': 'off',
	'@stylistic/js/lines-between-class-members': ['error', 'always', { exceptAfterSingleLine: true }],
	'@stylistic/js/max-len': [
		'error',
		{
			code: 120,
			ignoreTemplateLiterals: true,
			ignoreRegExpLiterals: true,
			ignoreStrings: true,
			ignoreComments: true,
		},
	],
	'@stylistic/js/new-parens': 'error',
	'@stylistic/js/no-multiple-empty-lines': 'error',
	'@stylistic/js/no-trailing-spaces': 'error',
	'@stylistic/js/object-curly-spacing': ['error', 'always'],
	'@stylistic/js/padding-line-between-statements': [
		'error',
		{ blankLine: 'always', next: 'block', prev: '*' },
		{ blankLine: 'always', next: '*', prev: 'block' },
		{ blankLine: 'always', next: 'block-like', prev: '*' },
		{ blankLine: 'always', next: '*', prev: 'block-like' },
		{ blankLine: 'always', next: 'return', prev: '*' },
		{ blankLine: 'always', next: '*', prev: 'directive' },
		{ blankLine: 'always', next: '*', prev: ['const', 'let', 'var'] },
		{ blankLine: 'always', next: 'class', prev: '*' },
		{ blankLine: 'always', next: '*', prev: 'class' },
		{
			blankLine: 'any',
			next: ['const', 'let', 'var', 'export'],
			prev: ['const', 'let', 'var', 'export'],
		},
		{ blankLine: 'any', next: ['case', 'default'], prev: '*' },
		{ blankLine: 'any', next: '*', prev: ['case', 'default'] },
		{ blankLine: 'any', next: 'directive', prev: 'directive' },
	],
	'@stylistic/js/quote-props': ['error', 'as-needed'],
};
